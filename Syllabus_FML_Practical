{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sangitaGIT011/Myproj/blob/main/Syllabus_FML_Practical\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from google.colab import files\n",
        " #Load the Dataset\n",
        "\n",
        "\n",
        "dataset = pd.read_csv(\"https://raw.githubusercontent.com/sangitaGIT011/Myproj/refs/heads/main/health_lifestyle_dataset.csv\")\n",
        "\n",
        "\n",
        "  #check for missing value\n",
        "#print(dataset.isnull().sum())\n",
        "\n",
        "#dataset.head()\n",
        "\n",
        "\n",
        "#Handle Missing Values\n",
        "#dataset['age'].fillna(dataset['age'].median(), inplace=True)\n",
        "\n",
        "dataset['age'] = dataset['age'].fillna(dataset['age'].median())\n",
        "\n",
        "dataset['family_history'] = dataset['family_history'].fillna(dataset['family_history'].mode())\n",
        "\n",
        "scaler=MinMaxScaler()\n",
        "\n",
        "\n",
        "# Normalize (On numeric column) systolic_db and Famliy_history\n",
        "scaler = MinMaxScaler()\n",
        "\n",
        "\n",
        "dataset['systolic_bp'] = scaler.fit_transform(dataset[['systolic_bp']])\n",
        "dataset['family_history'] = scaler.fit_transform(dataset[['family_history']])\n",
        "\n",
        "#Encode 'gender': Male=1, Female=0\n",
        "dataset['gender'] = dataset['gender'].map({'Male': 1, 'Female': 0})\n",
        "\n",
        "#print(dataset.dtypes)\n",
        "#print(dataset[['systolic_bp', 'family_history']].head())\n",
        "\n",
        "\n",
        "#print(dataset.info())\n",
        "\n",
        "\n",
        "#print(dataset.head())\n",
        "\n",
        "print(dataset)\n",
        "dataset.to_excel(\"health_lifestyle_dataset1.xlsx\", index=False)\n",
        "print(\"✅ Dataset saved as 'health_lifestyle_dataset.xlsx'\")\n",
        "files.download(\"health_lifestyle_dataset1.xlsx\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 728
        },
        "outputId": "c7472c5e-3c4d-496e-b936-0e141679d461",
        "id": "U6SMXjacSK7P"
      },
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "           id  age  gender   bmi  daily_steps  sleep_hours  water_intake_l  \\\n",
            "0           1   56       1  20.5         4198          3.9             3.4   \n",
            "1           2   69       0  33.3        14359          9.0             4.7   \n",
            "2           3   46       1  31.6         1817          6.6             4.2   \n",
            "3           4   32       0  38.2        15772          3.6             2.0   \n",
            "4           5   60       0  33.6         6037          3.8             4.0   \n",
            "...       ...  ...     ...   ...          ...          ...             ...   \n",
            "99995   99996   53       1  33.1         4726          3.9             2.0   \n",
            "99996   99997   22       1  35.1        11554          4.5             3.1   \n",
            "99997   99998   37       1  18.9         3924          3.8             1.0   \n",
            "99998   99999   72       0  27.8        16110          5.6             0.8   \n",
            "99999  100000   37       1  35.4         8222          9.1             1.8   \n",
            "\n",
            "       calories_consumed  smoker  alcohol  resting_hr  systolic_bp  \\\n",
            "0                   1602       0        0          97     0.797753   \n",
            "1                   2346       0        1          68     0.292135   \n",
            "2                   1643       0        1          90     0.370787   \n",
            "3                   2460       0        0          71     0.842697   \n",
            "4                   3756       0        1          98     0.550562   \n",
            "...                  ...     ...      ...         ...          ...   \n",
            "99995               3118       0        1          56     0.168539   \n",
            "99996               1967       0        0          51     0.662921   \n",
            "99997               2328       0        0          69     0.022472   \n",
            "99998               3093       0        0          93     0.831461   \n",
            "99999               3942       0        1          71     0.617978   \n",
            "\n",
            "       diastolic_bp  cholesterol  family_history  disease_risk  \n",
            "0               111          240             0.0             0  \n",
            "1                65          207             0.0             0  \n",
            "2                99          296             0.0             0  \n",
            "3                95          175             0.0             0  \n",
            "4                61          294             0.0             0  \n",
            "...             ...          ...             ...           ...  \n",
            "99995            76          282             0.0             0  \n",
            "99996            77          192             0.0             0  \n",
            "99997           117          218             0.0             0  \n",
            "99998            72          188             0.0             0  \n",
            "99999            80          276             0.0             1  \n",
            "\n",
            "[100000 rows x 16 columns]\n",
            "✅ Dataset saved as 'health_lifestyle_dataset.xlsx'\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_db2e7c6e-a667-4dc0-aec3-58cd6504e7e2\", \"health_lifestyle_dataset1.xlsx\", 7350503)"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "Welcome To Colab",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}